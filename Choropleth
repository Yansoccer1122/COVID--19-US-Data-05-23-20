#!/usr/bin/env python
# coding: utf-8

pip install chart-studio
pip install cufflinks

import chart_studio.plotly as py
import plotly.graph_objs as go 
from plotly.offline import init_notebook_mode,iplot,plot
init_notebook_mode(connected=True) 

import pandas as pd

covid_data = pd.read_csv('05-22-2020.csv')

ABV = ["AL", "AK", "AS","AZ", "AR", "CA", "CO", "CT",  "DE", "DP", "DC","FL", "GA", "GP", "GM",
          "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", 
          "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", 
          "NM", "NY", "NC", "ND","NI", "OH", "OK", "OR", "PA", "PR" , "RI", "SC", 
          "SD", "TN", "TX", "UT", "VT","VI", "VA", "WA", "WV", "WI", "WY"]

covid_data['ABV'] = ABV

data = dict(
        type = 'choropleth',
        colorscale = 'reds',
        locations = covid_data['ABV'],
        locationmode = 'USA-states',
        reversescale = False,
        z = covid_data['Confirmed'],
        marker = dict(line = dict(color = 'rgb(12,12,12)',width = 3)),
        text = covid_data['Province_State'],
        colorbar = {'title' : 'Confirmed'},
        
      ) 

layout = dict(title = 'Confirmed Covid-19 Cases', 
                geo = dict(scope = 'usa')
             )

choromap = go.Figure(data = [data],layout = layout)
plot(choromap)

pip install Pillow
from PIL import Image 
pip install opencv-python
import cv2
import matplotlib.pyplot as plt
import numpy as np

choropleth_USA = cv2.imread('Covid19_choropleth.png')

print('Image type: ', type(choropleth_USA),
      'Image Dimensions : ', choropeth_USA.shape)

image_copy = np.copy(choropleth_USA)
image_copy = cv2.cvtColor(image_copy, cv2.COLOR_BGR2RGB)
plt.imshow(image_copy)

white = np.array([255, 255, 255])
white2 = np.array([255, 255, 255])

mask = cv2.inRange(image_copy,white,white2)
plt.imshow(mask, cmap = 'gray')

masked_image = np.copy(image_copy)
masked_image[mask != 0] = [0, 0, 0]
plt.imshow(masked_image)

background_image = cv2.imread('coronavirus-CDCimage.png')
background_image = cv2.cvtColor(background_image, cv2.COLOR_BGR2RGB)

crop_background = background_image[0:450, 0:700]

crop_background[mask == 0] = [0, 0, 0]

plt.imshow(crop_background)

final_image = crop_background + masked_image
plt.imshow(final_image)

